String.prototype.width = function(fontStyle) {
  var f, o, w;
  f = fontStyle || '12px arial';
  o = $('<div>' + this + '</div>').css({
    'position': 'absolute',
    'float': 'left',
    'white-space': 'nowrap',
    'visibility': 'hidden',
    'font': f
  }).appendTo($('body'));
  w = o.width();
  o.remove();
  return w;
};

$(function() {
  $('#logo').click((function(_this) {
    return function(e) {
      e.preventDefault();
      $('html, body').scrollTop(0);
      $('.pages .page.active').removeClass('active');
      return $('.pages .page.frontpage').addClass('active');
    };
  })(this));
  $('*[data-target]').click((function(_this) {
    return function(e) {
      e.preventDefault();
      $('html, body').scrollTop(0);
      $('.pages .page.active').removeClass('active');
      $('.pages .page.' + $(e.currentTarget).data('target')).addClass('active');
      switch ($(e.currentTarget).data('target')) {
        case 'set':
          return _this.Player.initPlayer(Data.Sets[0]);
        default:
          return _this.Player.destroyPlayer();
      }
    };
  })(this));
  $('.open-mobile-menu').click((function(_this) {
    return function(e) {
      e.preventDefault();
      $('#overlay').addClass('show');
      return $('body').addClass('mobile-menu-open');
    };
  })(this));
  $('#overlay').click((function(_this) {
    return function(e) {
      $('#overlay').removeClass('show');
      return $('body').removeClass('mobile-menu-open');
    };
  })(this));
  $('.slideshow').each(function() {
    var goTo, resizeTimeout, slideWidth, wrapperWidth;
    $(this).data('current-slide', 0);
    slideWidth = $(this).width();
    wrapperWidth = $('.slide', this).length * slideWidth;
    $('.slide', this).width(slideWidth + 'px');
    $('.slides', this).width(wrapperWidth + 'px');
    goTo = (function(_this) {
      return function(n) {
        var slides;
        slides = $('.slide', _this);
        if (n < 0) {
          n = slides.length - 1;
        }
        if (n >= slides.length) {
          n = 0;
        }
        $('.slides', _this).css('transform', 'translateX(-' + n * slides.width() + 'px)');
        $(_this).data('current-slide', n);
        $('.slide.active', _this).removeClass('active');
        $('.slide', _this).eq(n).addClass('active');
        $('.bullets a.active', _this).removeClass('active');
        return $('.bullets a', _this).eq(n).addClass('active');
      };
    })(this);
    $('.next', this).on('click', (function(_this) {
      return function(e) {
        e.preventDefault();
        return goTo($(_this).data('current-slide') + 1);
      };
    })(this));
    $('.prev', this).on('click', (function(_this) {
      return function(e) {
        e.preventDefault();
        return goTo($(_this).data('current-slide') - 1);
      };
    })(this));
    $('.bullets a', this).on('click', (function(_this) {
      return function(e) {
        e.preventDefault();
        return goTo($(e.currentTarget).index());
      };
    })(this));
    resizeTimeout = null;
    return $(window).resize((function(_this) {
      return function() {
        clearTimeout(resizeTimeout);
        return resizeTimeout = setTimeout(function() {
          if ($(_this).is(':visible')) {
            slideWidth = $(_this).width();
          } else {
            slideWidth = $(window).width();
          }
          wrapperWidth = $('.slide', _this).length * slideWidth;
          $('.slide', _this).width(slideWidth + 'px');
          $('.slides', _this).width(wrapperWidth + 'px');
          return goTo($(_this).data('current-slide'));
        }, 400);
      };
    })(this));
  });
  $('#timeline .play').on('click', (function(_this) {
    return function(e) {
      if (!_this.Player.player) {
        return;
      }
      if (_this.Player.isPlaying) {
        return _this.Player.player.pauseVideo();
      } else {
        return _this.Player.player.playVideo();
      }
    };
  })(this));
  $('#timeline .bar').on('click', (function(_this) {
    return function(e) {
      var pos, s, w;
      if (!_this.Player.player) {
        return;
      }
      w = $('#timeline .line').width();
      pos = (e.pageX - e.currentTarget.offsetLeft) - 10;
      if (pos < 0) {
        pos = 0;
      }
      if (pos > w) {
        pos = w;
      }
      pos = pos / w;
      s = Math.round(pos * _this.Player.duration);
      return _this.Player.player.seekTo(s);
    };
  })(this));
  $('#playlist').on('click', '.track .info', (function(_this) {
    return function(e) {
      if (!_this.Player.player) {
        return;
      }
      $('#playlist .track.open').removeClass('open');
      _this.Player.player.seekTo($(e.currentTarget).parents('.track').data('start'));
      return console.log('seekTo', $(e.currentTarget).parents('.track').data('start'));
    };
  })(this));
  $('#playlist').on('click', '.track .download', (function(_this) {
    return function(e) {
      e.preventDefault();
      e.stopImmediatePropagation();
      $('#playlist .track.open').removeClass('open');
      return $(e.currentTarget).parents('.track').addClass('open');
    };
  })(this));
  return this.Player = {
    destroyPlayer: function() {
      this.player = null;
      clearInterval(this.durationInt);
      return $('#video').html($('<div id="youtube-player"></div>'));
    },
    initPlayer: function(setData) {
      var $controls, $playlist, $video, aw, t, track, tracks, tw, _i, _len, _ref;
      this.setData = setData;
      $video = $('#video');
      $controls = $('#timeline');
      $playlist = $('#playlist');
      $controls.find('play').removeClass('playing');
      tracks = document.createDocumentFragment();
      _ref = this.setData.tracks;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        track = _ref[_i];
        tw = String(track.title).width('20px "ProximaSemiBold", "Helvetica Neue", Helvetica, Arial, sans-serif');
        aw = String(track.artist).width('20px "ProximaSemiBold", "Helvetica Neue", Helvetica, Arial, sans-serif');
        track.titleScrolling = tw > 240;
        track.artistScrolling = aw > 240;
        t = templates.playlist.track.tmpl(track);
        $(tracks).append(t);
        track.active = false;
      }
      $playlist.html(tracks);
      this.playing = (function(_this) {
        return function(play) {
          if (play) {
            _this.isPlaying = true;
            $controls.find('.play').addClass('playing');
            $playlist.addClass('playing');
            return _this.durationInt = setInterval(function() {
              var l, s, _j, _k, _len1, _len2, _ref1, _ref2;
              _this.currentTime = _this.player.getCurrentTime();
              l = null;
              _ref1 = _this.setData.tracks;
              for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
                track = _ref1[_j];
                if (track.startsAt <= _this.currentTime) {
                  l = track;
                }
              }
              if (!l.active) {
                _ref2 = _this.setData.tracks;
                for (_k = 0, _len2 = _ref2.length; _k < _len2; _k++) {
                  track = _ref2[_k];
                  track.active = false;
                }
                l.active = true;
                $playlist.find('.track.current').removeClass('current');
                $playlist.find('.track[data-start="' + l.startsAt + '"]').addClass('current');
              }
              $controls.find('.pos').css('left', (_this.currentTime / _this.duration) * 100 + '%');
              s = Math.floor(_this.currentTime % 60);
              if (s < 10) {
                s = '0' + s;
              }
              return $controls.find('.current-time').html(Math.floor(_this.currentTime / 60) + ':' + s);
            }, 500);
          } else {
            _this.isPlaying = false;
            $controls.find('.play').removeClass('playing');
            $playlist.removeClass('playing');
            return clearInterval(_this.durationInt);
          }
        };
      })(this);
      this.onPlayerReady = (function(_this) {
        return function(e) {
          var bar, fragment, pos, _j, _len1, _ref1;
          _this.duration = _this.player.getDuration();
          fragment = document.createDocumentFragment();
          _ref1 = _this.setData.tracks;
          for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
            track = _ref1[_j];
            pos = track.startsAt / _this.duration;
            bar = document.createElement('span');
            bar.className = 'track';
            bar.style.left = pos * 100 + '%';
            fragment.appendChild(bar);
          }
          $('#timeline .line .tracks').html(fragment);
          $('#timeline .total-time').html(Math.floor(_this.duration / 60) + ':' + Math.floor(_this.duration % 60));
          return $('#timeline .current-time').html('0:00');
        };
      })(this);
      this.onPlayerStateChange = (function(_this) {
        return function(e) {
          switch (e.data) {
            case 1:
              return _this.playing(true);
            case 2:
              return _this.playing(false);
          }
        };
      })(this);
      return YT.ready((function(_this) {
        return function() {
          return _this.player = new YT.Player('youtube-player', {
            height: '100%',
            width: '100%',
            videoId: setData.videoId,
            playerVars: {
              rel: 0,
              theme: 'light',
              showinfo: 0,
              controls: 0,
              autohide: 1,
              modestbranding: 1,
              cc_load_policy: 0,
              iv_load_policy: 3
            },
            events: {
              'onReady': _this.onPlayerReady,
              'onStateChange': _this.onPlayerStateChange
            }
          });
        };
      })(this));
    }
  };
});

//# sourceMappingURL=data:application/json;base64,